package JavaStudy;

public class Divisor {
	
	//0 이상 3000 이하의 숫자에 대한 약수의 합을 구하는 문제 
	
	public int solution(int n) {	//정수값을 매개변수로 입력받아 기능을 구현하는 메서드
		int answer = 0;	//정답을 저장할 int 타입의 변수 answer를 선언하고 0으로 초기화.
		
		if(n >= 0 && n <=3000) {	//제약 조건// n이 0~3000이 아니면 아무것도 안하고 if문을 빠져나감
			for(int i = 1; i <= n; i++) {
				//반복문 생성자 안에서 int 타입 변수 i를 선언하고 1로 초기화 해서, i가 n이하까지 반복하는데, 매 반복 후에 i를 1씩 증가시킴
				if(n % i == 0) {	//반복을 할 때마다 조건문으로 확인을 하는데 만약에 n을 i로 나눴을때 나머지가 0이면
					answer = answer + i;	//그 i를 answer에 더해주는 작업을 하게되는데,
				}	//조건이 맞지 않은 경우에는 아무것도 안하고 다시 반복문으로 올가가게 됨. 결과적으로 i에 1을 더해서 다시 여기까지 내려옴.
			}
		}	//제약 조건 끝 맨 위의 조건문의 조건이 거짓일 경우 여기로 와서 아무것도 안하게됨
		return answer;	//정답을 반환함
	}
}
