package certificate;

class Section018_primeNum {
	//배열에 저장된 소수들의 갯수 구하기(배열의 크기가 변하면 내부의 내용도 변해야 된다. length로 하는게 나을듯)
	public static void main(String[] args) {
		int k, i, j, m;	//k = 2부터 1씩 증가하는 값이 저장될 변수, i = 배열의 번지수, j = 소수의 갯수, m = 소수의 배수가 들어있는 위치지를 지정할 변수
		int [] a = new int[99];	//크기 99인 정수형 데이ㅌ를 담는 배열 생성
		
		k = 1;	//각 배열의 번지에 데이터를 1부터 순차적으로 저장할 변수
		
		do {
			k++;	//증가 연산자로 2가 된다.
			a[k - 2] = k;	//앞서 k의 값을 증가시킨이유는 배열의 0번지 부터 차례대로 데이터를 저장하기 위해서 이며, 0번지에 2부터 들어가는 이유는 1은 소수가 아니기 때문
		}while(k < 100);	//k는 배열의 크기를 넘을수 없으므로 100미만으로 제한 하였다.
		
		i = -1;	//하단에 증가 연산자를 사용하기에 초기 값을 -1로 지정함
		j = 0;
		
		while(true) {	//break문을 만나기 전까지 무한 반복
			i++;	//이제 배열의 번지수를 표현할 변수i의 값이 0으로 설정된다.
			if(i > 98) {	//상단에 선언한 배열의 크기를 넘을 수 없으므로 i가 98을 초과하면 소수의 갯수를 출력하고 그만둔다.
				System.out.println(j);
				break;
			}
			if(a[i] == 0)	//해당 번지수의 데이터가 0이라면 소수가 아니므로 상단의 while문으로 올라가 i++ 부터  반복한다.
				continue;
			
			j++;	//여기까지 내려온다면 소수이므로 j의 갯수를 1증가 시킨다.
			m = i;	
			
			while(true) {
				m += a[i];
				if(m > 98)
					break;
				a[m] = 0;
			}
		}
	}

}
