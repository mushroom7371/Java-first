package certificate;

class Section040_array_type1 {
	//배열 ㄹ 모양으로 채우기
	public static void main(String[] args) {
		int k, L, m, n, i, j, p;
		//k = 1씩 증가 값 저장, L = 배열의 시작 위치, m = 배열의 열 끝 위치, n = 증가값을 지정, i = 배열의 행위치 , j = 배열의 열 위치, p = 배열의 시작, 끝 위치를 바꿀 스위치 변수
		int [][] a = new int[5][5];	//크기가 각각 5인 2차원 배열 생성
		
		k = 0;	//배열의 각 번지에 저장될 숫자
		L = 0;	//시작위치는 배열의 0번지
		m = 4;	//끝 위치는 배열의 마지막 4번지
		n = 1;
		
		for (i = 0; i <= 4; i++) {	//첫번째 배열이 0번지 부터 4번지 까지 반복된다.
			for (j = L; j != m + n; j += n) {	//첫번째 배열의 각각의 번지가 가리키는 크기5의 배열을 제어하기 위한 반복문
				//첫시작은 L이므로 0번지부터 시작된다. m + n = 5이고 !=을 통하여 5가 아닐때까지 반복, 즉 4번지까지 반복한다.
				k++;
				a[i][j] = k;	//k는 1부터 25까지 증가된다.
			}	//각 행이 0~4번지까지 5번 반복되면 더이상 반복할 수 없으므로 아래로 내려간다. 예를들어 1행의 0~4번지까지 반복하면 하단으로 이동
			p = L;	//스위치 변수의 값이 L로 변경된다. 치환이라고 생각 해도 좋음. 0과 4가 번갈아가며 저장됨
			L = m;	//L은 4와 0을 반복한다. 
			m = p;	//마찬가지로 0과 4가 반복
			n *= -1;	//반복문의 j += n의 내용에 적용되면 -1씩 감소, +1씩 증가를 반복한다.
		}
		
		for (int x = 0; x <= 4; x++) {	//배열 출력용 반복문
			for (int y = 0; y <= 4; y++)
				System.out.printf("%3d", a[x][y]);
			System.out.printf("\n");
		}

	}

}
