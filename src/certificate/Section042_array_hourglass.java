package certificate;

import java.util.Scanner;

class Section042_array_hourglass {
	//배열로 모래시계 모양 만들기
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in); 
		int x, m, L, i, j, k;
		//x = 입력받은 수를 저장, m = 배열의 중간 행 번호를 저장 5X5 배열의 경우 3행, L = 행에서 열의 시작위치 또는 끝위치를 저장
		//i = 배열의 행 위치를 지정, j = 배열의 열 위치를 지정, k = 1씩 증가될 수
		
		x = sc.nextInt();	//키보드로 부터 입력받은 정수를 x에 저장한다.
		
		int [][] a = new int[x][x]; //x만큼의 크기를 가지는 2차원 배열을 생성하고 참조변수 a가 가리키도록 한다.
		
		k = 0;	//1부터 시작하기 위해 0으로 초기화
		L = x;	//배열의 위치는 0부터 시작하므로 첫행에서는 입력받은 배열의 크기-1 만큼 숫자를 저장하는데, L-- 를 수행한 후 저장하므로 x로 초기화
		m = x / 2;	//자바에서 정수를 나누면 소수점은 자동으로 버려지므로 x=2 가 되고 이는 배열의 중간 행이 될것이다.
		
		for (i = 0; i <= m; i++) {	//m은 입력받은 수의 절반으로 중간 행을 의미하고 그때까지 반복을 실시한다.
			L--;	//반복마다 1 감소하므로 배열의 마지막 위치가 줄어드는 셈이다.
			for (j = i; j <= L; j++) {	//i부터 시작과 j++의 의미는 결국 저장될 번지가 대칭을 이루는것과 비슷하다. 예를들어 첫행의 경우 0~4번지면 두번째 행의 경우 1~3번지가 된다.
				k++;	//저장될 데이터를 1씩 증가
				a[i][j] = k;	//해당 배열의 위치에 데이터 저장
			}
		}
		for (i = m + 1; i <= x - 1; i++) {	//2차원 배열의 첫번째 배열을 제어하는데 중간을 넘었다면(m 초과)
			L--;	//반복마다 1 감소하면 하단의 for문 시작시 j=L로 인해 시작 위치가 줄어들게 되는것이고 모래시계 모양이 된다.
			for (j = L; j <= i; j++) {	//첫 시작 위치인 L부터 i까지 반복의 결과로 데이터 저장 모양새는 대칭을 이루게 된다.
				k++;
				a[i][j] = k;
			}
		}
		
		for (int y = 0; y < x; y++) {	//출력을 위한 반복문
			for (int z = 0; z < x; z++)
				System.out.printf("%3d", a[y][z]);
			System.out.printf("\n");
		}
		sc.close();
	}

}
